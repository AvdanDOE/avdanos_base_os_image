#!/bin/zsh

if [[ $EUID -ne 0 ]];
then
    echo "Not running as root. Authorization required\n"
    exec pkexec --disable-internal-agent "$0" "$@"
fi

if [[ "$(realpath /proc/$PPID/exe)" == "/usr/bin/doeshell_settings" ]] && [[ "$1" == "query_atomic_upd" ]]; then
export UPD_GUI=1
else
    echo "Warning! You're not running this in Settings application,
    and may run into issues while updating your installation.
    It's highly recommended to run updater inside Settings."
fi

export OS_CURR_VER=$(cat /etc/snapshots/current.json)

    if [[ "$(doectl --get-current-snapshot)" == *"installer"* ]]; then
        export OS_WARNING="OS Updates unsupported in Installer image. To try it out, please install AvdanOS on your device."
    fi

print_debug() {
    info $(doectl --get-current=bootslot)
    info $(doectl --get-current-snapshot)
    info $(doectl --get-current=grub_bootset)
}

reboot_opposite_slot_force() {
# SHOULD BE ONLY USED BY US: HERE'S WHY:
# 1. We reboot to /snapshots/rootfs_b because we assume update has finished succesfully
# 2. If it didn't, and we suddenly switch to older rootfs image, except random stuff like
# doeshell returning code 255 or doectl unable to report any status about current image
    echo "DOEENV_NEXT_SLOT=B" >> /boot_2nd/grub/doe/doeenv.cfg
    doectl --reboot_to_slot=B --scheduled
    doeshell --notify=BN_Event_BypassDBus_UpdateFinished
    systemctl reboot
}

# Start by checking for updates
# Make sure to not run pacman -Sy again when updates are already queued. That saves a lot of time.
   # export OS_UPD_VAR="/tmp/ready_for_update"
    if [[ "$1" == "query_atomic_upd" ]];
        echo "Checking for updates...
        avdanos_atomicupdate --get_from_endpoint $BRANCH $OS_CURR_VER $BOOTSLOT
        if [[ "$?" == "1" ]]; 
            echo "Update available: $(cat /tmp/rauc_front/*.json)
            echo "Unable to update now, ESTATUS:not_implemented"
        fi
    fi
